static const GLfloat g_vertex_buffer_data[] = {
		0.0f, 0.0f, 0.0f,
		0.2f, 0.0f, 0.0f,
		0.2f,  0.2f, 0.0f,
		0.0f,  0.2f, 0.0f,
	};
	GLuint vertexbuffer;
	glGenBuffers(1, &vertexbuffer);
	glBindBuffer(GL_ARRAY_BUFFER, vertexbuffer);
	glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);
	
	while (!glfwWindowShouldClose(window)) {

		glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

		//glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
		glLineWidth(1);
		
		
	
		glEnableVertexAttribArray(0);
		glBindBuffer(GL_ARRAY_BUFFER, vertexbuffer);
		glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, (void*)0);

		// Вывести треугольник!
		glColor3d(0.7, 0.0, 0.0);
		glDrawArrays(GL_QUADS, 0, 4); 
		glDisableVertexAttribArray(0);
		glBegin(GL_QUADS);
			glColor3d(0.5, 0.0, 0.0);
			glVertex2d(0.02, 0.02);
			glVertex2d(0.18, 0.02);
			glVertex2d(0.18, 0.18);
			glVertex2d(0.02, 0.18);
		glEnd();
		glBegin(GL_LINES);
		glColor3d(0.0, 0.0, 0.5);
		for (double i = -1.0; i < 1.0; i += 0.1)
		{
			glVertex2d(i, -1.0);
			glVertex2d(i, 1.0);
		}
		for (double i = -1.0; i < 1.0; i += 0.1)
		{
			glVertex2d(-1.0, i);
			glVertex2d(1.0, i);
		}

		glColor3d(0.5, 0.0, 0.0);
		glVertex2d(0.0, 0.0);
		glVertex2d(0.1, 0.1);
		glVertex2d(0.1, 0.0);
		glVertex2d(0.0, 0.1);
		glEnd();

		

		
		glfwSwapBuffers(window);
		glfwPollEvents();
	}
	glfwTerminate();
	return 0;